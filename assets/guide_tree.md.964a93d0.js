import{_ as e,o as t,c as a,O as o}from"./chunks/framework.85ee4edd.js";const u=JSON.parse('{"title":"目录结构","description":"","frontmatter":{},"headers":[],"relativePath":"guide/tree.md","filePath":"guide/tree.md"}'),c={name:"guide/tree.md"},r=o('<h1 id="目录结构" tabindex="-1">目录结构 <a class="header-anchor" href="#目录结构" aria-label="Permalink to &quot;目录结构&quot;">​</a></h1><h2 id="app" tabindex="-1">app.* <a class="header-anchor" href="#app" aria-label="Permalink to &quot;app.*&quot;">​</a></h2><p>其内是一个完整的vue或nuxt目录结构。对于大型项目，可创建多个app，优化构建和部署方式。</p><h2 id="common" tabindex="-1">common <a class="header-anchor" href="#common" aria-label="Permalink to &quot;common&quot;">​</a></h2><p>通用资源目录，多个app共享。在nuxt项目中<code>common</code>目录等同于<code>layer</code>。</p><div class="tip custom-block"><p class="custom-block-title">全局http拦截器</p><p>项目已自动创建 <code>common/plugins/http/interceptor.ts</code> 文件，作为全局http拦截器。</p></div>',6),n=[r];function p(s,i,d,l,_,m){return t(),a("div",null,n)}const f=e(c,[["render",p]]);export{u as __pageData,f as default};
