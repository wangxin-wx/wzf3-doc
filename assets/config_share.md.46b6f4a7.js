import{_ as s,o,c as a,O as n}from"./chunks/framework.b61e621b.js";const F=JSON.parse('{"title":"项目根目录下 config/config.*.ts","description":"","frontmatter":{},"headers":[],"relativePath":"config/share.md","filePath":"config/share.md"}'),e={name:"config/share.md"},l=n(`<h1 id="项目根目录下-config-config-ts" tabindex="-1">项目根目录下 <code>config/config.*.ts</code> <a class="header-anchor" href="#项目根目录下-config-config-ts" aria-label="Permalink to &quot;项目根目录下 \`config/config.*.ts\`&quot;">​</a></h1><h2 id="apps" tabindex="-1">apps <a class="header-anchor" href="#apps" aria-label="Permalink to &quot;apps&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>{ [key: string]: { port: number enabled?: boolean hostname?: string } }</code></li><li><strong>默认：</strong> <code>{}</code></li></ul><p>示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// config/config.*.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> wzf</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ModuleOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">apps</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 项目根目录需有app.exp目录</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">app.exp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">port</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 端口</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">enabled</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 是否启用当前app，若false，在启动或构建时忽略会此app</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// 用于多app路由跳转。若未配置，hostname值默认为server.domain||127.0.0.1+port</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">hostname</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>多app路由跳转时，获取app的路由地址：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> runtimeConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRuntimeConfig</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">href </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> runtimeConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">public</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wzf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">apps[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">app.exp</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">hostname</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// =&gt; http://127.0.0.1</span></span></code></pre></div><h2 id="env" tabindex="-1">env <a class="header-anchor" href="#env" aria-label="Permalink to &quot;env&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, any&gt;</code></li><li><strong>默认：</strong> <code>{}</code></li></ul><p>自定义全局常量，项目内通过 <code>useRuntimeConfig().public.wzf.env</code> 获取。示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// config/config.*.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> wzf</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ModuleOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">foo</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// *.vue</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> runtimeConfig </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRuntimeConfig</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(runtimeConfig</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">public</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">wzf</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]) </span><span style="color:#676E95;font-style:italic;">// &#39;bar&#39;</span></span></code></pre></div><h2 id="encrypt" tabindex="-1">encrypt <a class="header-anchor" href="#encrypt" aria-label="Permalink to &quot;encrypt&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>是否启用加解密</p><h2 id="dkymode" tabindex="-1">dkyMode <a class="header-anchor" href="#dkymode" aria-label="Permalink to &quot;dkyMode&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>&#39;normal&#39; | &#39;safe&#39; | &#39;quick&#39;</code></li><li><strong>默认：</strong> <code>&#39;normal&#39;</code></li></ul><p>启动模式。<code>normal</code>：正常；<code>safe</code>：安测模式，并将 <code>encrypt</code> 置为 <code>true</code> ；<code>quick</code>：性能模式</p><h2 id="build-copypublic" tabindex="-1">build.copyPublic <a class="header-anchor" href="#build-copypublic" aria-label="Permalink to &quot;build.copyPublic&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>构建时是否复制public目录</p><h2 id="server-https" tabindex="-1">server.https <a class="header-anchor" href="#server-https" aria-label="Permalink to &quot;server.https&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>是否启用https</p><h2 id="server-domain" tabindex="-1">server.domain <a class="header-anchor" href="#server-domain" aria-label="Permalink to &quot;server.domain&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;&#39;</code></li></ul><p>域名配置，配置后启用访问域名验证</p><h2 id="server-csp-enabled" tabindex="-1">server.csp.enabled <a class="header-anchor" href="#server-csp-enabled" aria-label="Permalink to &quot;server.csp.enabled&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>false</code></li></ul><p>是否启用csp</p><h2 id="server-csp-directives" tabindex="-1">server.csp.directives <a class="header-anchor" href="#server-csp-directives" aria-label="Permalink to &quot;server.csp.directives&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>{ &#39;default-src&#39;?: string[] &#39;base-uri&#39;?: string[] &#39;font-src&#39;?: string[] &#39;form-action&#39;?: string[] &#39;frame-ancestors&#39;?: string[] &#39;img-src&#39;?: string[] &#39;object-src&#39;?: string[] &#39;script-src&#39;?: string[] &#39;script-src-attr&#39;?: string[] &#39;style-src&#39;?: string[] &#39;connect-src&#39;?: string[] &#39;frame-src&#39;?: string[] }</code></li><li><strong>默认：</strong> <code>{ &#39;default-src&#39;: [&quot;&#39;self&#39;&quot;], &#39;base-uri&#39;: [&quot;&#39;self&#39;&quot;], &#39;font-src&#39;: [&quot;&#39;self&#39;&quot;, &#39;https:&#39;, &#39;data:&#39;], &#39;form-action&#39;: [&quot;&#39;self&#39;&quot;], &#39;frame-ancestors&#39;: [&quot;&#39;self&#39;&quot;], &#39;img-src&#39;: [&quot;&#39;self&#39;&quot;, &#39;data:&#39;], &#39;object-src&#39;: [&quot;&#39;none&#39;&quot;], &#39;script-src&#39;: [&quot;&#39;self&#39;&quot;], &#39;script-src-attr&#39;: [&quot;&#39;none&#39;&quot;], &#39;style-src&#39;: [&quot;&#39;self&#39;&quot;, &#39;https:&#39;, &quot;&#39;unsafe-inline&#39;&quot;], &#39;connect-src&#39;: [&quot;&#39;self&#39;&quot;], &#39;frame-src&#39;: [&quot;&#39;self&#39;&quot;], }</code></li><li><strong>参考：</strong> <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Security-Policy" target="_blank" rel="noreferrer">Content-Security-Policy</a></li></ul><p>csp规则</p><h2 id="redis-type" tabindex="-1">redis.type <a class="header-anchor" href="#redis-type" aria-label="Permalink to &quot;redis.type&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>&#39;single&#39; | &#39;cluster&#39; | &#39;sentinel&#39;</code></li><li><strong>默认：</strong> <code>single</code></li></ul><p>redis类型。<code>single</code> 单点；<code>cluster</code>：集群；<code>sentinel</code>：哨兵</p><h2 id="redis-hostname" tabindex="-1">redis.hostname <a class="header-anchor" href="#redis-hostname" aria-label="Permalink to &quot;redis.hostname&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>127.0.0.1:6379</code></li></ul><p>redis地址。<code>redis.type</code> 为 <code>cluster(集群)</code> 或 <code>sentinel(哨兵)</code> 时配置为 <code>10.120.22.22:6378,10.120.22.22:6379</code>，以逗号分隔。</p><h2 id="redis-password" tabindex="-1">redis.password <a class="header-anchor" href="#redis-password" aria-label="Permalink to &quot;redis.password&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>**</code></li></ul><p>redis密码</p><h2 id="redis-db" tabindex="-1">redis.db <a class="header-anchor" href="#redis-db" aria-label="Permalink to &quot;redis.db&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>number</code></li><li><strong>默认：</strong> <code>**</code></li></ul><p>redis库号。<code>redis.type</code> 为 <code>cluster(集群)</code> 时可省略</p><h2 id="redis-name" tabindex="-1">redis.name <a class="header-anchor" href="#redis-name" aria-label="Permalink to &quot;redis.name&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>**</code></li></ul><p>redis名称。<code>redis.type</code> 为 <code>sentinel(哨兵)</code> 时配置</p><h2 id="authorization" tabindex="-1">authorization <a class="header-anchor" href="#authorization" aria-label="Permalink to &quot;authorization&quot;">​</a></h2><p>配置此项后<code>wzf</code>将拦截登录接口托管<code>token</code>，自动将<code>token</code>放置到配置的请求头中</p><h2 id="authorization-url" tabindex="-1">authorization.url <a class="header-anchor" href="#authorization-url" aria-label="Permalink to &quot;authorization.url&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;&#39;</code></li></ul><p>需要拦截的登录接口<code>url</code></p><h2 id="authorization-token" tabindex="-1">authorization.token <a class="header-anchor" href="#authorization-token" aria-label="Permalink to &quot;authorization.token&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;&#39;</code></li></ul><p><code>token</code>参数在响应体中的位置。若响应体为 <code>{status:200,data:{token1:&quot;t_value&quot;}}</code>，则值为：<code>&quot;data.token1&quot;</code></p><h2 id="authorization-header" tabindex="-1">authorization.header <a class="header-anchor" href="#authorization-header" aria-label="Permalink to &quot;authorization.header&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认：</strong> <code>&#39;&#39;</code></li></ul><p><code>token</code>放在请求头的参数。若配置为<code>&quot;header-token&quot;</code>，则由wzf代理的接口会自动加上<code>&quot;header-token&quot;</code>的请求头</p><h2 id="proxy" tabindex="-1">proxy <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;proxy&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>Record&lt;string, string&gt;</code></li><li><strong>默认：</strong> <code>{}</code></li></ul><p>接口请求代理。示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// config/config.*.ts</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> wzf</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ModuleOptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">proxy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">exp</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://127.0.0.1:3001</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// *.vue｜ts</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// vue项目</span></span>
<span class="line"><span style="color:#82AAFF;">$fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/exp/post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 请求地址最终为http://127.0.0.1:3001/post</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// nuxt项目</span></span>
<span class="line"><span style="color:#82AAFF;">useFetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/exp/post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 请求地址最终为http://127.0.0.1:3001/post</span></span></code></pre></div><h2 id="proxytimeout" tabindex="-1">proxyTimeout <a class="header-anchor" href="#proxytimeout" aria-label="Permalink to &quot;proxyTimeout&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>number(毫秒)</code></li><li><strong>默认：</strong> <code>1000 * 60 * 10</code></li></ul><p>全局接口超时。如接口需单独配置时，在请求头中添加<code>x-wz-timeout</code>，优先级高于全局 <code>proxyTimeout</code>。示例：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vue项目</span></span>
<span class="line"><span style="color:#82AAFF;">$fetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/exp/post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">x-wz-timeout</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// nuxt项目</span></span>
<span class="line"><span style="color:#82AAFF;">useFetch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/exp/post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">headers</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">x-wz-timeout</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="logger-showreq" tabindex="-1">logger.showReq <a class="header-anchor" href="#logger-showreq" aria-label="Permalink to &quot;logger.showReq&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>日志中是否打印接口请求信息</p><h2 id="logger-showres" tabindex="-1">logger.showRes <a class="header-anchor" href="#logger-showres" aria-label="Permalink to &quot;logger.showRes&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认：</strong> <code>true</code></li></ul><p>日志中是否打印接口响应信息</p><h2 id="nuxt" tabindex="-1">nuxt <a class="header-anchor" href="#nuxt" aria-label="Permalink to &quot;nuxt&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>NuxtConfig</code></li><li><strong>参考：</strong> <a href="https://nuxt.com.cn/docs/api/configuration/nuxt-config" target="_blank" rel="noreferrer"><code>NuxtConfig</code></a></li></ul><p><code>nuxt</code> 项目生效，合并 <code>nuxt.config.ts</code> 配置，优先级高于 <code>nuxt.config.ts</code></p><h2 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h2><ul><li><strong>类型：</strong> <code>ViteConfig</code></li><li><strong>参考：</strong> <a href="https://cn.vitejs.dev/config/shared-options.html" target="_blank" rel="noreferrer"><code>ViteConfig</code></a></li></ul><p><code>vue</code> 项目生效，合并 <code>vite.config.ts</code> 配置，优先级高于 <code>vite.config.ts</code></p>`,80),t=[l];function p(r,c,i,d,y,D){return o(),a("div",null,t)}const C=s(e,[["render",p]]);export{F as __pageData,C as default};
